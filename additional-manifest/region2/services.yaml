apiVersion: v1
kind: Service
metadata:
  name: restate-0
  annotations:
    # here specify a dns name with the appropriate suffix to be globally resolveable
    external-dns.alpha.kubernetes.io/hostname: restate-0.two-region-demo-cluster.restate.region2.dev.restate.cloud
    # here specify the appropriate lb subnet for the zone that restate-0 actually schedules into
    service.beta.kubernetes.io/aws-load-balancer-subnets: subnet-0c2d72e084d79d432
    # here specify the zone that restate-0 actually schedules into
    service.beta.kubernetes.io/aws-load-balancer-target-node-labels: topology.kubernetes.io/zone=eu-central-1a
    # here specify the appropriate security group that lets the nlb communicate to nodes on 5122, and receive traffic from pods on 5122
    service.beta.kubernetes.io/aws-load-balancer-security-groups: sg-09c36354c740007fb
    # these names have a 32 char max
    service.beta.kubernetes.io/aws-load-balancer-name: restate0-region2-two-region-demo

    service.beta.kubernetes.io/aws-load-balancer-manage-backend-security-group-rules: "false"
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance
    service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: preserve_client_ip.enabled=false
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: traffic-port
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: TCP
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "2"
spec:
  ports:
    - name: node
      port: 5122
      protocol: TCP
      targetPort: 5122
  publishNotReadyAddresses: true
  type: LoadBalancer
  selector:
    app: restate
    apps.kubernetes.io/pod-index: "0"
---
apiVersion: v1
kind: Service
metadata:
  name: restate-1
  annotations:
    # here specify a dns name with the appropriate suffix to be globally resolveable
    external-dns.alpha.kubernetes.io/hostname: restate-1.two-region-demo-cluster.restate.region2.dev.restate.cloud
    # here specify the appropriate lb subnet for the zone that restate-1 actually schedules into
    service.beta.kubernetes.io/aws-load-balancer-subnets: subnet-0c2d72e084d79d432
    # here specify the zone that restate-1 actually schedules into
    service.beta.kubernetes.io/aws-load-balancer-target-node-labels: topology.kubernetes.io/zone=eu-central-1a
    # here specify the appropriate security group that lets the nlb communicate to nodes on 5122, and receive traffic from pods on 5122
    service.beta.kubernetes.io/aws-load-balancer-security-groups: sg-09c36354c740007fb
    # these names have a 32 char max
    service.beta.kubernetes.io/aws-load-balancer-name: restate1-region2-two-region-demo

    service.beta.kubernetes.io/aws-load-balancer-manage-backend-security-group-rules: "false"
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance
    service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: preserve_client_ip.enabled=false
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: traffic-port
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: TCP
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "2"
spec:
  ports:
    - name: node
      port: 5122
      protocol: TCP
      targetPort: 5122
  publishNotReadyAddresses: true
  type: LoadBalancer
  selector:
    app: restate
    apps.kubernetes.io/pod-index: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: restate-2
  annotations:
    # here specify a dns name with the appropriate suffix to be globally resolveable
    external-dns.alpha.kubernetes.io/hostname: restate-2.two-region-demo-cluster.restate.region2.dev.restate.cloud
    # here specify the appropriate lb subnet for the zone that restate-2 actually schedules into
    service.beta.kubernetes.io/aws-load-balancer-subnets: subnet-0c2d72e084d79d432
    # here specify the zone that restate-2 actually schedules into
    service.beta.kubernetes.io/aws-load-balancer-target-node-labels: topology.kubernetes.io/zone=eu-central-1a
    # here specify the appropriate security group that lets the nlb communicate to nodes on 5122, and receive traffic from pods on 5122
    service.beta.kubernetes.io/aws-load-balancer-security-groups: sg-09c36354c740007fb
    # these names have a 32 char max
    service.beta.kubernetes.io/aws-load-balancer-name: restate2-region2-two-region-demo

    service.beta.kubernetes.io/aws-load-balancer-manage-backend-security-group-rules: "false"
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance
    service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: preserve_client_ip.enabled=false
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: traffic-port
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: TCP
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "2"
spec:
  ports:
    - name: node
      port: 5122
      protocol: TCP
      targetPort: 5122
  publishNotReadyAddresses: true
  type: LoadBalancer
  selector:
    app: restate
    apps.kubernetes.io/pod-index: "2"
